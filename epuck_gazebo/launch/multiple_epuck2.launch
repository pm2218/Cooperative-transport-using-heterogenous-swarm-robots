<launch>
    <arg name="robot_1" default="robot_1" />
    <arg name="robot_1_id" default="1" />
    <arg name="robot_2" default="robot_2" />
    <arg name="robot_2_id" default="2" />
    <arg name="robot_3" default="robot_3" />
    <arg name="robot_3_id" default="3" />
    <arg name="robot_4" default="robot_4" />
    <arg name="robot_4_id" default="4" />
    <arg name="node_start_delay" default="5.0" />
    <arg name="init_pose" default="-x 0 -y 0 -z 0" />
    <arg name="initial_x1" default="1" />
    <arg name="initial_y1" default="1" />
    <arg name="initial_x2" default="-1" />
    <arg name="initial_y2" default="1" />
    <arg name="initial_x3" default="1" />
    <arg name="initial_y3" default="-1" />
    <arg name="initial_x4" default="-1" />
    <arg name="initial_y4" default="-1" />
  <include
    file="$(find epuck_gazebo)/launch/world.launch" />
  <group ns="$(arg robot_1)">
    <include file="$(find epuck_gazebo)/launch/epuck2.launch">
      <arg name="name" value="$(arg robot_1)"/>
      <arg name="id" value="$(arg robot_1_id)" />
      <arg name="init_pose" value="-x $(arg initial_x1) -y $(arg initial_y1) -z 0" />
    </include>
    <!--<include file="$(find epuck_gazebo)/launch/go_to_camera.launch">
      <arg name="name" value="$(arg robot_1)"/>
      <arg name="id" value="$(arg robot_1_id)" />
      <arg name="initial_x" value="$(arg initial_x1)" />
      <arg name="initial_y" value="$(arg initial_y1)" />
    </include>-->
  </group>
  
  <group ns="$(arg robot_2)">
    <include file="$(find epuck_gazebo)/launch/epuck2.launch">
      <arg name="name" value="$(arg robot_2)"/>
      <arg name="id" value="$(arg robot_2_id)" />
      <param name="tf_prefix" value="$(arg robot_2)" />
      <arg name="init_pose" value="-x $(arg initial_x2) -y $(arg initial_y2) -z 0" />
    </include>
    <!--<include file="$(find epuck_gazebo)/launch/go_to_camera.launch">
      <arg name="name" value="$(arg robot_2)"/>
      <arg name="id" value="$(arg robot_1_id)" />
      <arg name="initial_x" value="$(arg initial_x2)" />
      <arg name="initial_y" value="$(arg initial_y2)" />
    </include>-->
  </group>

  <group ns="$(arg robot_3)">
    <include file="$(find epuck_gazebo)/launch/epuck2.launch">
      <arg name="name" value="$(arg robot_3)"/>
      <arg name="id" value="$(arg robot_3_id)" />
      <param name="tf_prefix" value="$(arg robot_3)" />
      <arg name="init_pose" value="-x $(arg initial_x3) -y $(arg initial_y3) -z 0" />
    </include>
    <!--<include file="$(find epuck_gazebo)/launch/go_to_camera.launch">
      <arg name="name" value="$(arg robot_3)"/>
      <arg name="id" value="$(arg robot_3_id)" />
      <arg name="initial_x" value="$(arg initial_x3)" />
      <arg name="initial_y" value="$(arg initial_y3)" />
    </include>-->
  </group>

  <group ns="$(arg robot_4)">
    <include file="$(find epuck_gazebo)/launch/epuck2.launch">
      <arg name="name" value="$(arg robot_4)"/>
      <arg name="id" value="$(arg robot_4_id)" />
      <param name="tf_prefix" value="$(arg robot_4)" />
      <arg name="init_pose" value="-x $(arg initial_x4) -y $(arg initial_y4) -z 0" />
    </include>
    <!--<include file="$(find epuck_gazebo)/launch/go_to_camera.launch">
      <arg name="name" value="$(arg robot_4)"/>
      <arg name="id" value="$(arg robot_4_id)" />
      <arg name="initial_x" value="$(arg initial_x4)" />
      <arg name="initial_y" value="$(arg initial_y4)" />
    </include>-->
  </group>
  
  

  <node name="aruco_detect" pkg="aruco_detect" type="aruco_detect" launch-prefix="bash -c 'sleep $(arg node_start_delay); $0 $@' ">
    <param name="image_transport" value="compressed" />
    <param name="publish_images" value="true" />
    <param name="fiducial_len" value="0.1778" />
    <param name="dictionary" value="11" />
    <param name="do_pose_estimation" value="true" />
    <param name="ignore_fiducials" value="" />
    <param name="fiducial_len_override" value="" />
    <remap from="/camera/compressed" to="/camera/color/image_raw/compressed" />
    <remap from="/camera_info" to="/camera/color/camera_info" />
  </node>

  <node name="spawn_marker_on_object" pkg="grobot_utilities" type="spawn_marker_on_object.py" output="screen" launch-prefix="bash -c 'sleep $(arg node_start_delay); $0 $@' "/>

</launch>